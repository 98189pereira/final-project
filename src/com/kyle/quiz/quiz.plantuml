@startuml

title __QUIZ's Class Diagram__\n

  namespace com.kyle.quiz {
    class com.kyle.quiz.BlankBox {
        {static} + DEFAULT_ANSWER : String
        {static} # SPACING : int
        # boxAnswer : TextField
        # gridPos : int
        # question : String
        # questionBox : VBox
        # required : boolean
        + BlankBox()
        + getAnswer()
        + getGridPos()
        + getQuestion()
        + getQuestionBox()
        + isRequired()
        + setAnswer()
        + setGridPos()
        + setRequired()
        - createQuestion()
    }
  }
  

  namespace com.kyle.quiz {
    class com.kyle.quiz.ExtraQuizData {
        - extraNode : Node
        - lastGridPos : int
        - quizTitleText : String
        + ExtraQuizData()
        + getExtraNode()
        + getLastGridPos()
        + getQuizTitleText()
        + setExtraNode()
    }
  }
  

  namespace com.kyle.quiz {
    class com.kyle.quiz.InvalidQuizException {
    }
  }
  

  namespace com.kyle.quiz {
    class com.kyle.quiz.MultipleChoice {
        # answers : ToggleGroup
        # options : String[]
        + MultipleChoice()
        + getAnswer()
        + setAnswer()
        - createQuestion()
    }
  }
  

  namespace com.kyle.quiz {
    enum QuestionTypes {
      blank_box
      multiple_choice
    }
  }
  

  namespace com.kyle.quiz {
    enum QuizFileFormat {
      ANSWER
      OPTION
      OPTIONS
      QUESTION
      QUESTIONS
      QUESTION_DATA
      QUESTION_TYPE
      QUIZ
      QUIZ_TITLE
      REQUIRED
      parent
      prefix
      type
    }
  }
  

  namespace com.kyle.quiz {
    interface com.kyle.quiz.QuizFormat {
        {abstract} + addQuestions()
        {abstract} + checkAnswers()
        {abstract} + getAnswersJson()
        {abstract} + getQuestions()
        {abstract} + loadQuestions()
        {abstract} + scrubQuiz()
        {abstract} + submitQuiz()
    }
  }
  

  namespace com.kyle.quiz {
    class com.kyle.quiz.QuizHandler {
        + quizTitle : String
        {static} # QUESTION_OFFSET : int
        {static} # SPACING : int
        - answersJson : String
        - questions : ArrayList<QuizQuestion>
        + addQuestions()
        + checkAnswers()
        + getAnswersJson()
        + getQuestions()
        {static} + getRequiredText()
        + loadQuestions()
        + scrubQuiz()
        + submitQuiz()
        - getQuestionAnswerMap()
    }
  }
  

  namespace com.kyle.quiz {
    interface com.kyle.quiz.QuizQuestion {
        {abstract} + getAnswer()
        + getDefaultAnswer()
        {abstract} + getGridPos()
        {abstract} + getQuestion()
        {abstract} + getQuestionBox()
        + isRequired()
        {abstract} + setAnswer()
    }
  }
  

  namespace com.kyle.quiz {
    interface com.kyle.quiz.SubmittableQuiz {
        + quizComplete()
    }
  }
  

  com.kyle.quiz.BlankBox .up.|> com.kyle.quiz.QuizQuestion
  com.kyle.quiz.InvalidQuizException -up-|> java.io.IOException
  com.kyle.quiz.MultipleChoice -up-|> com.kyle.quiz.BlankBox
  com.kyle.quiz.QuizFileFormat .up.|> com.kyle.parser.ValidParserRules
  com.kyle.quiz.QuizFileFormat o-- com.kyle.quiz.QuizFileFormat : parent
  com.kyle.quiz.QuizFileFormat o-- com.kyle.parser.PropertyType : type
  com.kyle.quiz.QuizHandler .up.|> com.kyle.quiz.QuizFormat


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
